{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/patients/services/patientcrudservice.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction SubmitComponent_div_10_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"pasNumber is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SubmitComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtemplate(1, SubmitComponent_div_10_div_1_Template, 2, 0, \"div\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f[\"pasNumber\"].errors && ctx_r0.f[\"pasNumber\"].errors[\"required\"]);\n  }\n}\nfunction SubmitComponent_div_16_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"forenames is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SubmitComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtemplate(1, SubmitComponent_div_16_div_1_Template, 2, 0, \"div\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f[\"forenames\"].errors && ctx_r1.f[\"forenames\"].errors[\"forenames\"]);\n  }\n}\nexport class SubmitComponent {\n  /*------------------------------------------\r\n  --------------------------------------------\r\n  Created constructor\r\n  --------------------------------------------\r\n  --------------------------------------------*/\n  constructor(patientService, router) {\n    this.patientService = patientService;\n    this.router = router;\n  }\n  /**\r\n   * Write code on Method\r\n   *\r\n   * @return response()\r\n   */\n  ngOnInit() {\n    this.form = new FormGroup({\n      pasNumber: new FormControl('', [Validators.required]),\n      forenames: new FormControl('', Validators.required),\n      surname: new FormControl('', Validators.required),\n      dateOfBirth: new FormControl('', Validators.required),\n      sexCode: new FormControl('', Validators.required),\n      homeTelephoneNumber: new FormControl('', Validators.required),\n      nokName: new FormControl('', Validators.required),\n      nokRelationshipCode: new FormControl('', Validators.required),\n      nokAddressLine1: new FormControl('', Validators.required),\n      fonokAddressLine2renames: new FormControl('', Validators.required),\n      nokAddressLine3: new FormControl('', Validators.required),\n      nokAddressLine4: new FormControl('', Validators.required),\n      nokPostcode: new FormControl('', Validators.required),\n      gpCode: new FormControl('', Validators.required),\n      gpSurname: new FormControl('', Validators.required),\n      gpInitials: new FormControl('', Validators.required),\n      gpPhone: new FormControl('', Validators.required)\n    });\n  }\n  /**\r\n   * Write code on Method\r\n   *\r\n   * @return response()\r\n   */\n  get f() {\n    return this.form.controls;\n  }\n  /**\r\n   * Write code on Method\r\n   *\r\n   * @return response()\r\n   */\n  submit() {\n    console.log(this.form.value);\n    this.patientService.submit(this.form.value).subscribe(res => {\n      console.log('Post created successfully!');\n      this.router.navigateByUrl('patients');\n    });\n  }\n}\nSubmitComponent.ɵfac = function SubmitComponent_Factory(t) {\n  return new (t || SubmitComponent)(i0.ɵɵdirectiveInject(i1.PatientcrudserviceService), i0.ɵɵdirectiveInject(i2.Router));\n};\nSubmitComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SubmitComponent,\n  selectors: [[\"app-submit\"]],\n  decls: 19,\n  vars: 4,\n  consts: [[1, \"container\"], [\"href\", \"#\", \"routerLink\", \"/patients\", 1, \"btn\", \"btn-primary\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"pasNumber\"], [\"formControlName\", \"pasNumber\", \"id\", \"pasNumber\", \"type\", \"text\", 1, \"form-control\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"for\", \"forenames\"], [\"formControlName\", \"forenames\", \"id\", \"forenames\", \"type\", \"text\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"alert\", \"alert-danger\"], [4, \"ngIf\"]],\n  template: function SubmitComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n      i0.ɵɵtext(2, \"Create New Patient\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"a\", 1);\n      i0.ɵɵtext(4, \"Back\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function SubmitComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.submit();\n      });\n      i0.ɵɵelementStart(6, \"div\", 3)(7, \"label\", 4);\n      i0.ɵɵtext(8, \"pasNumber:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 5);\n      i0.ɵɵtemplate(10, SubmitComponent_div_10_Template, 2, 1, \"div\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 3)(12, \"label\", 7);\n      i0.ɵɵtext(13, \"forenames\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"textarea\", 8);\n      i0.ɵɵtext(15, \"            \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(16, SubmitComponent_div_16_Template, 2, 1, \"div\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"button\", 9);\n      i0.ɵɵtext(18, \"Submit\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.f[\"pasNumber\"].touched && ctx.f[\"pasNumber\"].invalid);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.f[\"forenames\"].touched && ctx.f[\"forenames\"].invalid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", !ctx.form.valid);\n    }\n  },\n  dependencies: [i3.NgIf, i2.RouterLink, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormGroup","FormControl","Validators","i0","SubmitComponent","constructor","patientService","router","ngOnInit","form","pasNumber","required","forenames","surname","dateOfBirth","sexCode","homeTelephoneNumber","nokName","nokRelationshipCode","nokAddressLine1","fonokAddressLine2renames","nokAddressLine3","nokAddressLine4","nokPostcode","gpCode","gpSurname","gpInitials","gpPhone","f","controls","submit","console","log","value","subscribe","res","navigateByUrl","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["G:\\Interviews\\DoctorManagePatientsTask\\DoctorManagePatientsTask_Frontend\\src\\app\\patients\\patient\\submit\\submit.component.ts","G:\\Interviews\\DoctorManagePatientsTask\\DoctorManagePatientsTask_Frontend\\src\\app\\patients\\patient\\submit\\submit.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormControl, Validators} from '@angular/forms'; \nimport { PatientcrudserviceService } from 'src/app/patients/services/patientcrudservice.service';\n@Component({\n  selector: 'app-submit',\n  templateUrl: './submit.component.html',\n  styleUrls: ['./submit.component.scss']\n})\nexport class SubmitComponent  implements OnInit {\n  form!: FormGroup;\n    \n  /*------------------------------------------\n  --------------------------------------------\n  Created constructor\n  --------------------------------------------\n  --------------------------------------------*/\n  constructor(\n    public patientService: PatientcrudserviceService,\n    private router: Router\n  ) { }\n    \n  /**\n   * Write code on Method\n   *\n   * @return response()\n   */\n  ngOnInit(): void \n  {\n    this.form = new FormGroup(\n    {\n      pasNumber: new FormControl('', [Validators.required]),\n      forenames: new FormControl('', Validators.required),\n      surname: new FormControl('', Validators.required),\n      dateOfBirth: new FormControl('', Validators.required),\n      sexCode: new FormControl('', Validators.required),\n      homeTelephoneNumber: new FormControl('', Validators.required),\n      nokName: new FormControl('', Validators.required),\n      nokRelationshipCode: new FormControl('', Validators.required),\n      nokAddressLine1: new FormControl('', Validators.required),\n      fonokAddressLine2renames: new FormControl('', Validators.required),\n      nokAddressLine3: new FormControl('', Validators.required),\n      nokAddressLine4: new FormControl('', Validators.required),\n      nokPostcode: new FormControl('', Validators.required),\n      gpCode: new FormControl('', Validators.required),\n      gpSurname: new FormControl('', Validators.required),\n      gpInitials: new FormControl('', Validators.required),\n      gpPhone: new FormControl('', Validators.required)\n    });\n  }\n    \n  /**\n   * Write code on Method\n   *\n   * @return response()\n   */\n  get f(){\n    return this.form.controls;\n  }\n    \n  /**\n   * Write code on Method\n   *\n   * @return response()\n   */\n  submit()\n  {\n    console.log(this.form.value);\n    this.patientService.submit(this.form.value).subscribe((res:any) => \n    {\n         console.log('Post created successfully!');\n         this.router.navigateByUrl('patients');\n    })\n  }\n  \n}\n","<div class=\"container\">\n    <h1>Create New Patient</h1>\n  \n    <a href=\"#\" routerLink=\"/patients\" class=\"btn btn-primary\">Back</a>\n    <!-- [formGroup]=\"form\" -->\n    <form [formGroup]=\"form\" (ngSubmit)=\"submit()\"> \n        <div class=\"form-group\">\n            <label for=\"pasNumber\">pasNumber:</label>\n            <input \n                formControlName=\"pasNumber\"\n                id=\"pasNumber\" \n                type=\"text\" \n                class=\"form-control\">\n            <div *ngIf=\"f['pasNumber'].touched && f['pasNumber'].invalid\" class=\"alert alert-danger\">\n                <div *ngIf=\"f['pasNumber'].errors && f['pasNumber'].errors['required']\">pasNumber is required.</div>\n            </div>\n        </div>\n  \n        <div class=\"form-group\">\n            <label for=\"forenames\">forenames</label>\n            <textarea \n                formControlName=\"forenames\"\n                id=\"forenames\" \n                type=\"text\" \n                class=\"form-control\">\n            </textarea>\n            <div *ngIf=\"f['forenames'].touched && f['forenames'].invalid\" class=\"alert alert-danger\">\n                <div *ngIf=\"f['forenames'].errors && f['forenames'].errors['forenames']\">forenames is required.</div>\n            </div>\n        </div>\n  \n        <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"!form.valid\">Submit</button>\n    </form>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}