{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { DatePipe } from '@angular/common';\nimport Swal from 'sweetalert2';\nlet DoctorsComponent = class DoctorsComponent {\n  /*------------------------------------------\r\n  --------------------------------------------\r\n  Created constructor\r\n  --------------------------------------------\r\n  --------------------------------------------*/\n  constructor(patientService) {\n    this.patientService = patientService;\n    this.patients = [];\n    this.page = 0;\n  }\n  /**\r\n   * Write code on Method\r\n   *\r\n   * @return response()\r\n   */\n  ngOnInit() {\n    this.getAllPatients();\n  }\n  getAllPatients() {\n    this.patientService.getAll().subscribe(data => {\n      this.patients = data.data.patients;\n      console.log(this.patients);\n    });\n  }\n  delete(id) {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: 'This process is irreversible.',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, remove it.',\n      cancelButtonText: 'No, let me think'\n    }).then(result => {\n      this.patientService.delete(id).subscribe(res => {\n        console.log(res);\n        if (res.status == 200) {\n          Swal.fire('Removed!', 'removed successfully.', 'success');\n          this.getAllPatients();\n        } else if (result.dismiss === Swal.DismissReason.cancel) {\n          Swal.fire('Cancelled', ' still in our database.', 'error');\n        }\n      });\n    });\n  }\n  gty(page) {\n    // this.GenericServiceService.getAllData(`https://api.instantwebtools.net/v1/passenger?page=${page}&size=${this.itemsPerPage}`).subscribe((data: any) => {\n    //   this.list =  data.data;\n    //   this.totalItems = data.totalItem;\n    // })\n  }\n};\nDoctorsComponent = __decorate([Component({\n  selector: 'app-doctors',\n  templateUrl: './doctors.component.html',\n  styleUrls: ['./doctors.component.scss'],\n  providers: [DatePipe]\n})], DoctorsComponent);\nexport { DoctorsComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,OAAOC,IAAI,MAAM,aAAa;AAgBvB,IAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAGzB;;;;;EAKAC,YAAmBC,cAAyC;IAAzC,mBAAc,GAAdA,cAAc;IAPjC,aAAQ,GAAc,EAAE;IACxB,SAAI,GAAS,CAAC;EAMkD;EAEhE;;;;;EAKAC,QAAQ;IAEN,IAAI,CAACC,cAAc,EAAE;EACvB;EAEAA,cAAc;IACZ,IAAI,CAACF,cAAc,CAACG,MAAM,EAAE,CAACC,SAAS,CAAEC,IAAQ,IAAG;MAEjD,IAAI,CAACC,QAAQ,GAAGD,IAAI,CAACA,IAAI,CAACC,QAAQ;MAClCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,QAAQ,CAAC;IAC5B,CAAC,CAAC;EACJ;EACAG,MAAM,CAACC,EAAU;IAEfb,IAAI,CAACc,IAAI,CAAC;MACRC,KAAK,EAAE,eAAe;MACtBC,IAAI,EAAE,+BAA+B;MACrCC,IAAI,EAAE,SAAS;MACfC,gBAAgB,EAAE,IAAI;MACtBC,iBAAiB,EAAE,iBAAiB;MACpCC,gBAAgB,EAAE;KACnB,CAAC,CAACC,IAAI,CAAEC,MAAM,IAAI;MACjB,IAAI,CAACnB,cAAc,CAACS,MAAM,CAACC,EAAE,CAAC,CAACN,SAAS,CAAEgB,GAAO,IAAI;QAEhDb,OAAO,CAACC,GAAG,CAACY,GAAG,CAAC;QACf,IAAIA,GAAG,CAACC,MAAM,IAAI,GAAG,EACrB;UACExB,IAAI,CAACc,IAAI,CAAC,UAAU,EAAE,uBAAuB,EAAE,SAAS,CAAC;UAC3D,IAAI,CAACT,cAAc,EAAE;SACpB,MAAM,IAAIiB,MAAM,CAACG,OAAO,KAAKzB,IAAI,CAAC0B,aAAa,CAACC,MAAM,EAAE;UACvD3B,IAAI,CAACc,IAAI,CAAC,WAAW,EAAE,yBAAyB,EAAE,OAAO,CAAC;;MAGlE,CAAC,CAAC;IAEJ,CAAC,CAAC;EAEJ;EACAc,GAAG,CAACC,IAAS;IACX;IACA;IACA;IACA;EAAA;CAGH;AA5DU5B,gBAAgB,eAP5BH,SAAS,CAAC;EACTgC,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,0BAA0B,CAAC;EACvCC,SAAS,EAAC,CAAClC,QAAQ;CAEpB,CAAC,GACWE,gBAAgB,CA4D1B;SA5DUA,gBAAgB","names":["Component","DatePipe","Swal","DoctorsComponent","constructor","patientService","ngOnInit","getAllPatients","getAll","subscribe","data","patients","console","log","delete","id","fire","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","then","result","res","status","dismiss","DismissReason","cancel","gty","page","selector","templateUrl","styleUrls","providers"],"sourceRoot":"","sources":["D:\\backend\\DoctorManagePatientsTask_Backend\\DoctorManagePatientsTask_Frontend\\src\\app\\doctor\\components\\doctors\\doctors.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { DatePipe } from '@angular/common';\nimport Swal from 'sweetalert2';\nimport { Patient } from '../../interfaces/patient';\nimport { PatientcrudserviceService } from 'src/app/patients/services/patientcrudservice.service';\ninterface PageEvent {\n  first: number;\n  rows: number;\n  page: number;\n  pageCount: number;\n}\n@Component({\n  selector: 'app-doctors',\n  templateUrl: './doctors.component.html',\n  styleUrls: ['./doctors.component.scss'],\n  providers:[DatePipe]\n\n})\nexport class DoctorsComponent {\n    patients: Patient[] = [];\n    page:number =0;\n    /*------------------------------------------\n    --------------------------------------------\n    Created constructor\n    --------------------------------------------\n    --------------------------------------------*/\n    constructor(public patientService: PatientcrudserviceService) { }\n\n    /**\n     * Write code on Method\n     *\n     * @return response()\n     */\n    ngOnInit(): void\n    {\n      this.getAllPatients();\n    }\n\n    getAllPatients(){\n      this.patientService.getAll().subscribe((data:any)=>\n      {\n        this.patients = data.data.patients;\n        console.log(this.patients);\n      });\n    }\n    delete(id?:number){\n\n      Swal.fire({\n        title: 'Are you sure?',\n        text: 'This process is irreversible.',\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Yes, remove it.',\n        cancelButtonText: 'No, let me think'\n      }).then((result) => {\n        this.patientService.delete(id).subscribe((res:any) =>\n          {\n             console.log(res);\n              if (res.status == 200)\n              {\n                Swal.fire('Removed!', 'removed successfully.', 'success');\n              this.getAllPatients();\n              } else if (result.dismiss === Swal.DismissReason.cancel) {\n                Swal.fire('Cancelled', ' still in our database.', 'error');\n              }\n\n        }) ;\n\n      });\n\n    }\n    gty(page: any){\n      // this.GenericServiceService.getAllData(`https://api.instantwebtools.net/v1/passenger?page=${page}&size=${this.itemsPerPage}`).subscribe((data: any) => {\n      //   this.list =  data.data;\n      //   this.totalItems = data.totalItem;\n      // })\n    }\n\n  }\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}