{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Directive, Input, HostListener, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DomHandler } from 'primeng/dom';\nclass FocusTrap {\n  constructor(el) {\n    this.el = el;\n  }\n  onkeydown(e) {\n    if (this.pFocusTrapDisabled !== true) {\n      e.preventDefault();\n      let focusableElements = DomHandler.getFocusableElements(this.el.nativeElement);\n      if (focusableElements && focusableElements.length > 0) {\n        if (!focusableElements[0].ownerDocument.activeElement) {\n          focusableElements[0].focus();\n        } else {\n          let focusedIndex = focusableElements.indexOf(focusableElements[0].ownerDocument.activeElement);\n          if (e.shiftKey) {\n            if (focusedIndex == -1 || focusedIndex === 0) focusableElements[focusableElements.length - 1].focus();else focusableElements[focusedIndex - 1].focus();\n          } else {\n            if (focusedIndex == -1 || focusedIndex === focusableElements.length - 1) focusableElements[0].focus();else focusableElements[focusedIndex + 1].focus();\n          }\n        }\n      }\n    }\n  }\n}\nFocusTrap.ɵfac = function FocusTrap_Factory(t) {\n  return new (t || FocusTrap)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nFocusTrap.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: FocusTrap,\n  selectors: [[\"\", \"pFocusTrap\", \"\"]],\n  hostAttrs: [1, \"p-element\"],\n  hostBindings: function FocusTrap_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"keydown.tab\", function FocusTrap_keydown_tab_HostBindingHandler($event) {\n        return ctx.onkeydown($event);\n      })(\"keydown.shift.tab\", function FocusTrap_keydown_shift_tab_HostBindingHandler($event) {\n        return ctx.onkeydown($event);\n      });\n    }\n  },\n  inputs: {\n    pFocusTrapDisabled: \"pFocusTrapDisabled\"\n  }\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FocusTrap, [{\n    type: Directive,\n    args: [{\n      selector: '[pFocusTrap]',\n      host: {\n        class: 'p-element'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    pFocusTrapDisabled: [{\n      type: Input\n    }],\n    onkeydown: [{\n      type: HostListener,\n      args: ['keydown.tab', ['$event']]\n    }, {\n      type: HostListener,\n      args: ['keydown.shift.tab', ['$event']]\n    }]\n  });\n})();\nclass FocusTrapModule {}\nFocusTrapModule.ɵfac = function FocusTrapModule_Factory(t) {\n  return new (t || FocusTrapModule)();\n};\nFocusTrapModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: FocusTrapModule\n});\nFocusTrapModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FocusTrapModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      exports: [FocusTrap],\n      declarations: [FocusTrap]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FocusTrap, FocusTrapModule };","map":{"version":3,"names":["i0","Directive","Input","HostListener","NgModule","CommonModule","DomHandler","FocusTrap","constructor","el","onkeydown","e","pFocusTrapDisabled","preventDefault","focusableElements","getFocusableElements","nativeElement","length","ownerDocument","activeElement","focus","focusedIndex","indexOf","shiftKey","ɵfac","ElementRef","ɵdir","type","args","selector","host","class","FocusTrapModule","ɵmod","ɵinj","imports","exports","declarations"],"sources":["G:/Interviews/DoctorManagePatientsTask/DoctorManagePatientsTask_Frontend/node_modules/primeng/fesm2020/primeng-focustrap.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Directive, Input, HostListener, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DomHandler } from 'primeng/dom';\n\nclass FocusTrap {\n    constructor(el) {\n        this.el = el;\n    }\n    onkeydown(e) {\n        if (this.pFocusTrapDisabled !== true) {\n            e.preventDefault();\n            let focusableElements = DomHandler.getFocusableElements(this.el.nativeElement);\n            if (focusableElements && focusableElements.length > 0) {\n                if (!focusableElements[0].ownerDocument.activeElement) {\n                    focusableElements[0].focus();\n                }\n                else {\n                    let focusedIndex = focusableElements.indexOf(focusableElements[0].ownerDocument.activeElement);\n                    if (e.shiftKey) {\n                        if (focusedIndex == -1 || focusedIndex === 0)\n                            focusableElements[focusableElements.length - 1].focus();\n                        else\n                            focusableElements[focusedIndex - 1].focus();\n                    }\n                    else {\n                        if (focusedIndex == -1 || focusedIndex === focusableElements.length - 1)\n                            focusableElements[0].focus();\n                        else\n                            focusableElements[focusedIndex + 1].focus();\n                    }\n                }\n            }\n        }\n    }\n}\nFocusTrap.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: FocusTrap, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nFocusTrap.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.3\", type: FocusTrap, selector: \"[pFocusTrap]\", inputs: { pFocusTrapDisabled: \"pFocusTrapDisabled\" }, host: { listeners: { \"keydown.tab\": \"onkeydown($event)\", \"keydown.shift.tab\": \"onkeydown($event)\" }, classAttribute: \"p-element\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: FocusTrap, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pFocusTrap]',\n                    host: {\n                        class: 'p-element'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { pFocusTrapDisabled: [{\n                type: Input\n            }], onkeydown: [{\n                type: HostListener,\n                args: ['keydown.tab', ['$event']]\n            }, {\n                type: HostListener,\n                args: ['keydown.shift.tab', ['$event']]\n            }] } });\nclass FocusTrapModule {\n}\nFocusTrapModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: FocusTrapModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nFocusTrapModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.3\", ngImport: i0, type: FocusTrapModule, declarations: [FocusTrap], imports: [CommonModule], exports: [FocusTrap] });\nFocusTrapModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: FocusTrapModule, imports: [CommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: FocusTrapModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    exports: [FocusTrap],\n                    declarations: [FocusTrap]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FocusTrap, FocusTrapModule };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}